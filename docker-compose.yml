version: '3.8'

services:
  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"
      - "4572:4572"
    environment:
      - SERVICES=s3
      - DOCKER_HOST=unix:///var/run/docker.sock

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  airflow-webserver:
    deploy:
      resources:
        limits:
          memory: 4G
    image: apache/airflow:2.7.1
    container_name: airflow-webserver
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor

      - AIRFLOW__API__AUTH_BACKEND=airflow.api.auth.backend.basic_auth  # Enables REST API authentication
      - AIRFLOW__WEBSERVER__RBAC=True  # Ensures Role-Based Access Control (RBAC) is enabled
      - AIRFLOW__WEBSERVER__SECRET_KEY=your_secret_key_here  # Secure key for session encryption

      - AWS_ACCESS_KEY_ID=root
      - AWS_SECRET_ACCESS_KEY=root
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ./airflow_docker/dags:/opt/airflow/dags
      - ./airflow_docker/logs:/opt/airflow/logs
      - ./airflow_docker/plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/scripts
      - ./airflow_docker/build:/opt/airflow/build
    ports:
      - "8081:8080"
    command: bash -c "[ ! -f /opt/airflow/.deps_installed ] && pip install --no-cache-dir -r /opt/airflow/build/reqs.txt && touch /opt/airflow/.deps_installed; exec airflow webserver"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    deploy:
      resources:
        limits:
          memory: 4G
    image: apache/airflow:2.7.1
    container_name: airflow-scheduler
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AWS_ACCESS_KEY_ID=root
      - AWS_SECRET_ACCESS_KEY=root
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ./airflow_docker/dags:/opt/airflow/dags
      - ./airflow_docker/logs:/opt/airflow/logs
      - ./airflow_docker/plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/scripts
      - ./airflow_docker/build:/opt/airflow/build
    command: bash -c "[ ! -f /opt/airflow/.deps_installed ] && pip install --no-cache-dir -r /opt/airflow/build/reqs.txt && touch /opt/airflow/.deps_installed; exec airflow scheduler"


  airflow-init:
    build: ./airflow_docker
    image: apache/airflow:2.7.1
    container_name: airflow-init
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - _AIRFLOW_DB_UPGRADE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=airflow
      - _AIRFLOW_WWW_USER_PASSWORD=airflow
    command: version
    volumes:
      - ./airflow_docker/dags:/opt/airflow/dags
      - ./airflow_docker/logs:/opt/airflow/logs
      - ./airflow_docker/plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/scripts
      - ./airflow_docker/build:/opt/airflow/build
  
  dashboard:
    build: ./dashboard
    container_name: dashboard
    ports:
      - "8501:8501"
    volumes:
      - ./dashboard:/app
    depends_on:
      - localstack
    environment:
      - AWS_ACCESS_KEY_ID=root
      - AWS_SECRET_ACCESS_KEY=root
      - AWS_DEFAULT_REGION=us-east-1

  api:
    build: ./api/
    container_name: stock-data-api
    ports:
      - "8000:8000"
    depends_on:
      - localstack
    environment:
      - AWS_ACCESS_KEY_ID=root
      - AWS_SECRET_ACCESS_KEY=root
      - AWS_DEFAULT_REGION=us-east-1
      - S3_ENDPOINT_URL=http://localstack:4566
    volumes:
      - ./src:/src

volumes:
  # mysql_data:
  postgres_data: